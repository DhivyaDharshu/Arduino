#include <SoftwareSerial.h> // Allows serial communication on other digital pins of the Arduino
#include<LiquidCrystal.h>// Allows the arduino board to control LCDs
#define trigPin 13 // defining the trigger pin as digital pin 13
#define echoPin 4 // defining echo pin as digital pin 4
#define led 2 // defining led pin as 2

SoftwareSerial mySerial(9, 10); // Connecting the Tx and Rx pins of GSM module to digital pins 9 and 10 of the Arduino respectively
LiquidCrystal lcd(3, 5, 9, 10, 11, 12); // sets the interfacing pins

int gas_sensor = 7; // Assigning the digital pin number 7 to LPG gas sensor
//int piezo_buzzer=11; // Assigning the digital pin number 11 to Piezo Buzzer
int gas_value, Gas_alert_val; // Initializing the variables to check the status of LPG gas
int buttonState = 0;
const int pushButton = 3;//Assigning the digital pin number 3 to push button
const int piezo_buzzer = 6; //Assigning the digital pin number 6 to piezo buzzer


void setup() // Code that runs once
{
  lcd.begin(16, 2); //initializes the 16x2 LCD
  pinMode(gas_sensor, INPUT); // To configure the gas sensor as an INPUT
  mySerial.begin(9600);  // Setting the baud rate of GSM Module
  Serial.begin(9600); // Setting the baud rate of Serial Monitor (Arduino)
  pinMode(pushButton, INPUT);// Sets the pushbutton as an Input
  pinMode(piezo_buzzer, OUTPUT);// Sets the piezo buzzer as an output
  pinMode(trigPin, OUTPUT); //Sets the trigpin as an Input
  pinMode(echoPin, INPUT);// Sets the echoPin as an Input
  pinMode(led, OUTPUT);// Sets the led as an ouput
}

void loop() // Code that runs repeatedly
{

  long duration, distance;
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  //Calculating the distance
  distance = (duration / 2) / 29.1;

  if (distance < 10)
  {
    digitalWrite(led, HIGH); // when distance is less than 10 led glows
  }

  else {
    digitalWrite(led, LOW);
  }

  Serial.print(distance);
  Serial.println(" cm");
  delay(500);
  CheckGasStatus(); // Function call to the function CheckGasStatus

}

void CheckGasStatus() // Function to check the status of LPG gas, if gas value is LOW then a SMS alert will be sent
{
  Gas_alert_val = ScanGas(); // Making a function call to ScanGas() and storing the result in the variable Gas_alert_val
  if (Gas_alert_val == LOW) // When the Gas_alert_val is LOW condition is met
  {
    SendAlert();// Function to send SMS Alerts
  }
}

int ScanGas() // Function to know the gas status
{
  gas_value = digitalRead(gas_sensor); // reads the sensor output (Vout of LM35)
  return gas_value; // returns temperature value in degree celsius
}

void SendAlert() // Function to send SMS alert and ringing buzzer
{
  SendTextMessage();// Function to send AT Commands to GSM module
  SendButton();
}
void SendButton()// Function to use push button to control buzzer and lcd
{
  int buttonState = digitalRead(pushButton);

  if (buttonState == 1) {
    digitalWrite(piezo_buzzer, 1);  // to activate the piezo buzzer
    lcd.setCursor(0, 0);
    lcd.print("gas leaking"); // displays gas leaking in lcd
    lcd.setCursor(0, 1);
    lcd.print("gas leaking");
  }
  if (buttonState == 0) {
    digitalWrite(piezo_buzzer, 0); // to switch off piezo buzzer
  }

  delay(100);
}


void SendTextMessage() // Function to send SMS to user
{

  mySerial.println("AT+CMGF=1");    //To send SMS in Text Mode
  delay(1000);
  mySerial.println("AT+CMGS=\"+919445093339\"\r"); // Input the phone number we are using
  delay(1000);
  mySerial.println("Gas Leaking!");// The content of the message to be sent
  delay(200);
  mySerial.println((char)26);// The stopping character
  delay(1000);

}
